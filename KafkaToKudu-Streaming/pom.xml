<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.training.bigdata.bigdata-arquitectura</groupId>
    <artifactId>bdarq-integracion-kudu-parent</artifactId>
    <packaging>pom</packaging>
    <version>1.1.8</version>

    <modules>
        <module>datalake-streaming</module>
        <module>assembly</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <jdk.version>1.8</jdk.version>
        <scala.version>2.11.8</scala.version>
        <scala.short.version>2.11</scala.short.version>
        <spark.cloudera.version>2.3.0.cloudera2</spark.cloudera.version>
        <junit.version>4.13.1</junit.version>
        <typesafe.scala.logging>3.7.2</typesafe.scala.logging>
        <type-safe.version>1.3.3</type-safe.version>
        <kudu.cloudera.version>1.7.0-cdh5.16.2</kudu.cloudera.version>
        <kafka.version>0-10</kafka.version>
        <scopt.version>3.7.0</scopt.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-library</artifactId>
                <version>${scala.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-core_${scala.short.version}</artifactId>
                <version>${spark.cloudera.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-streaming_${scala.short.version}</artifactId>
                <version>${spark.cloudera.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-streaming-kafka-${kafka.version}_${scala.short.version}</artifactId>
                <version>${spark.cloudera.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.kudu</groupId>
                <artifactId>kudu-client</artifactId>
                <version>${kudu.cloudera.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.pureconfig</groupId>
                <artifactId>pureconfig_${scala.short.version}</artifactId>
                <version>0.8.0</version>
            </dependency>
            <dependency>
                <groupId>com.typesafe.scala-logging</groupId>
                <artifactId>scala-logging_${scala.short.version}</artifactId>
                <version>${typesafe.scala.logging}</version>
            </dependency>
            <dependency>
                <groupId>com.typesafe</groupId>
                <artifactId>config</artifactId>
                <version>${type-safe.version}</version>
            </dependency>
            <dependency>
                <groupId>io.circe</groupId>
                <artifactId>circe-parser_2.11</artifactId>
                <version>0.11.0</version>
            </dependency>
            <dependency>
                <groupId>com.github.scopt</groupId>
                <artifactId>scopt_${scala.short.version}</artifactId>
                <version>${scopt.version}</version>
            </dependency>
            <dependency>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest_${scala.short.version}</artifactId>
                <version>3.0.5</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>net.manub</groupId>
                <artifactId>scalatest-embedded-kafka-streams_${scala.short.version}</artifactId>
                <version>0.9.0</version>
                <!--Para kafka 0.11.0 <version>0.16.0</version>-->
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.whisk</groupId>
                <artifactId>docker-testkit-core_2.11</artifactId>
                <version>0.9.8</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.whisk</groupId>
                <artifactId>docker-testkit-scalatest_2.11</artifactId>
                <version>0.9.8</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.github.docker-java</groupId>
                <artifactId>docker-java</artifactId>
                <version>3.0.14</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.whisk</groupId>
                <artifactId>docker-testkit-impl-docker-java_2.11</artifactId>
                <version>0.9.8</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.hibernate.validator</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>6.0.13.Final</version>
            </dependency>
            <dependency>
                <groupId>org.codehaus.jackson</groupId>
                <artifactId>jackson-mapper-asl</artifactId>
                <version>1.9.13</version>
            </dependency>


        </dependencies>

    </dependencyManagement>

    <distributionManagement>
        <repository>
            <id>releases</id>
            <url>${artifactory.release.url}</url>
        </repository>
        <snapshotRepository>
            <uniqueVersion>false</uniqueVersion>
            <id>snapshots</id>
            <url>${artifactory.snapshot.url}</url>
        </snapshotRepository>
    </distributionManagement>


    <build>
        <sourceDirectory>Code/spark/src/main/scala</sourceDirectory>
        <testSourceDirectory>Code/spark/src/test/scala</testSourceDirectory>
        <finalName>${project.artifactId}-${project.version}</finalName>
    </build>
    <reporting>
        <plugins>
            <plugin>
                <groupId>org.scala-tools</groupId>
                <artifactId>maven-scala-plugin</artifactId>
                <configuration>
                    <scalaVersion>${scala.version}</scalaVersion>
                </configuration>
            </plugin>
        </plugins>
    </reporting>


</project>
